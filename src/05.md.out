List.cons(vague String, "cooked", List.cons(vague String, "eaten", List.cons(vague String, "tried-cleaning", List.cons(vague String, "understood", List.cons(vague String, "slept", List.null(vague String)))))): List(String)
List(String): Type
List.null(vague String): List(String)
List.null(vague Nat): List(Nat)
List.null(vague List(String)): List(List(String))
List.cons(vague String, "a", List.cons(vague String, "b", List.cons(vague String, "c", List.null(vague String)))): List(String)
(x) => induction (x) { (_target) => Nat case null => 0 case cons(_head, _tail, almost) => add1(almost.tail) }: (x: List(String)) -> Nat
5: Nat
List.cons(vague Nat, 1, List.cons(vague Nat, 2, List.cons(vague Nat, 3, List.cons(vague Nat, 4, List.cons(vague Nat, 5, List.cons(vague Nat, 6, List.null(vague Nat))))))): List(Nat)
List.cons(vague Nat, 1, List.cons(vague Nat, 2, List.cons(vague Nat, 3, List.cons(vague Nat, 4, List.null(vague Nat))))): List(Nat)
List.cons(vague Nat, 3, List.cons(vague Nat, 2, List.cons(vague Nat, 1, List.null(vague Nat)))): List(Nat)
List.cons(vague Nat, 1, List.cons(vague Nat, 2, List.cons(vague Nat, 3, List.cons(vague Nat, 4, List.cons(vague Nat, 5, List.cons(vague Nat, 6, List.null(vague Nat))))))): List(Nat)